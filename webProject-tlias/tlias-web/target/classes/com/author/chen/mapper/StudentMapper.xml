<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.author.chen.mapper.StudentMapper">
    <update id="update">
        update student s
        <set>
            <if test=" name != null and name!=''  ">
                s.name=#{name},
            </if>
            <if test="no != null and no !='' ">
                s.no=#{no},
            </if>
            <if test="gender != null ">
                s.gender=#{gender},
            </if>
            <if test="phone != null and phone !='' ">
                s.phone=#{phone},
            </if>
            <if test=" idCard != null ">
                s.id_card=#{idCard},
            </if>
            <if test="isCollege != null ">
                s.is_college=#{isCollege},
            </if>
            <if test="address != null and address != '' ">
                s.address=#{address},
            </if>
            <if test="graduationDate != null ">
                s.graduation_date=#{graduationDate},
            </if>
            <if test="violationCount != null ">
                s.violation_count=#{violationCount},
            </if>
            <if test="violationScore != null ">
                s.violation_score=#{violationScore},
            </if>
            <if test="clazzId != null ">
                s.clazz_id=#{clazzId},
            </if>
            s.update_time=#{updateTime}
        </set>
        where s.id=#{id}
    </update>
    <update id="violationById">
        update student s
        set s.violation_count=s.violation_count + 1
          , s.violation_score=s.violation_score + #{score},
            s.update_time=#{updateTime}
        where s.id = #{id}
    </update>
    <delete id="del">
        delete from student where id in
        <foreach collection="ids" item="stuId" open="(" close=")" separator=",">
            #{stuId}
        </foreach>

    </delete>
    <select id="queryByParam" resultType="com.author.chen.pojo.Student">
        select s.*,c.name as clazzName from student s left join clazz c on s.clazz_id=c.id
        <where>
            <if test="name !=null and name !='' ">
                s.name like concat('%' #{name} '%' )
            </if>
            <if test="degree !=null">
                and s.degree=#{degree}
            </if>
            <if test="clazzId !=null">
                and s.clazz_id=#{clazzId}
            </if>
        </where>
    </select>
</mapper>